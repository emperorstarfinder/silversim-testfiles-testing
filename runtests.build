<?xml version="1.0"?>
<project name="Test Collecton" default="runtests" basedir=".">
	<target name="runtests">
		<property name="failedtests" value=""/>
		<mkdir dir="../testresults"/>
		<foreach item="File" property="testconfig">
			<in>
				<items>
					<include name="*.ini"/>
				</items>
			</in>
			<do>
				<property name="testfile" value="${path::get-file-name(testconfig)}"/>
				<echo message="Running ${testfile}"/>
				<property name="execute-test" value="true"/>
				<if test="${platform::is-unix()}">
					<if test="${pkg-config::exists('mono')}">
						<property name="section" value=""/>
						<foreach item="Line" in="../tests/${testfile}" property="line">
							<property name="trim-line" value="${string::trim(line)}"/>
							<property name="section" value="${string::substring(trim-line, 1, string::get-length(trim-line) - 2)}"
								if="${string::starts-with(trim-line, '[')}"/>
							<if test="${not string::starts-with(trim-line, '[')}">
								<property name="equalpos" value="${string::index-of(trim-line, '=')}"/>
								<if test="${int::parse(equalpos) &gt; 0}">
									<property name="var" value="${string::trim(string::substring(trim-line, 0, int::parse(equalpos)))}"/>
									<property name="val" value="${string::trim(string::substring(trim-line, int::parse(equalpos) + 1, string::get-length(trim-line) - int::parse(equalpos) - 1))}"/>
									<property name="minversion" value="${val}" if="${var == 'Minimum-Version' and section == 'Mono'}"/> 
								</if>
							</if>
						</foreach>
						<property name="execute-test" value="${pkg-config::is-atleast-version('mono',minversion)}"/>
					</if>
				</if>
				<echo message="Skipping ${testfile}" unless="${execute-test}"/>
				<trycatch>
					<try>
						<exec program="SilverSim.Main.exe" basedir="../bin" workingdir="../bin" managed="true" if="${execute-test}">
							<arg value="-m=testing"/>
							<arg value="-c"/>
							<arg value="../tests/${testfile}"/>
						</exec>
					</try>
					<catch>
						<property name="failedtests" value="${failedtests}
${testfile}"/>
					</catch>
				</trycatch>
			</do>
		</foreach>
		<call target="runscripttests-inner"/>
		<fail message="Failed tests:${failedtests}" if="${failedtests!=''}"/>
	</target>
	
	<target name="runscripttests">
		<property name="failedtests" value=""/>
		<mkdir dir="../testresults"/>
		<call target="runscripttests-inner"/>
		<fail message="Failed tests:${failedtests}" if="${failedtests!=''}"/>
	</target>
	
	<target name="runscripttests-inner">
		<property name="cwdlength" value="${string::get-length(directory::get-current-directory()) + 1}"/>
		<foreach item="File" property="stestfile">
			<in>
				<items basedir="LSLTests/FunctionalTests">
					<include name="**/*.lsl"/>
				</items>
			</in>
			<do>
				<property name="testfile" 
				value="${string::substring(stestfile, cwdlength, string::get-length(stestfile) - int::parse(cwdlength))}"/>
                <call target="runscript-actual"/>
			</do>
		</foreach>
	</target>
    <target name="runscripttest">
		<property name="cwdlength" value="${string::get-length(directory::get-current-directory()) + 1}"/>
		<property name="failedtests" value=""/>
        <call target="runscript-actual"/>
		<fail message="Failed tests:${failedtests}" if="${failedtests!=''}"/>
    </target>
    <target name="runscript-actual">
        <echo message="Running ${testfile}"/>
        <property name="testoutput" value="${testfile}.xml"/>
        <mkdir dir="../testresults/${path::get-directory-name(testoutput)}"/>
        <property name="scriptini" value="../tests/common/RunScriptTest.Common.ini"/>
        <property name="specscriptini" value="../tests/${testfile}.ini"/>
        <property name="scriptini" value="${specscriptini}" if="${file::exists(specscriptini)}"/>
        <trycatch>
            <try>
                <exec program="SilverSim.Main.exe" basedir="../bin" workingdir="../bin" managed="true">
                    <arg value="-m=testing"/>
                    <arg value="-c"/>
                    <arg value="${scriptini}"/>
                    <arg value="-D:SilverSim.Tests.Scripting.RunScript:00000000-0000-0000-0000-000000000000=../tests/${testfile}"/>
                    <arg value="-D:TestRunner:Name=${testfile}"/>
                    <arg value="-D:TestRunner:XUnitResultsFile=../testresults/${testoutput}"/>
                </exec>
            </try>
            <catch>
                <property name="failedtests" value="${failedtests}
${testfile}"/>
            </catch>
        </trycatch>
    </target>
</project>